name: Release

on:
  release:
    types: [published]

jobs:
  build-and-upload:
    name: Build and upload release assets
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: cursor-mcp-subagents-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: cursor-mcp-subagents-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: cursor-mcp-subagents-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: cursor-mcp-subagents-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: cursor-mcp-subagents-windows-x86_64.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          BIN_NAME=cursor-mcp-subagents
          EXT=""
          if [[ "${{ matrix.target }}" == *windows* ]]; then EXT=".exe"; fi
          SRC="target/${{ matrix.target }}/release/${BIN_NAME}${EXT}"
          mkdir -p dist
          OUT="dist/${{ matrix.artifact }}${EXT}"
          cp "$SRC" "$OUT"

      - name: Upload artifact to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
